{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CrtInterfaceDesignerItem, CrtViewElement } from \"@creatio-devkit/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DemoComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\")(1, \"input\", 2);\n    i0.ɵɵlistener(\"change\", function DemoComponent_label_1_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSelectionChange(option_r1.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", ctx_r0.groupName)(\"value\", option_r1.value)(\"checked\", option_r1.value === ctx_r0.selectedValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1.label, \" \");\n  }\n}\nlet DemoComponent = class DemoComponent {\n  constructor() {\n    this._displayColumn = 'Name';\n    this._valueColumn = 'Id';\n    this.groupName = 'radioGroup';\n    this.selectedValue = null;\n    this.parsedOptions = [];\n  }\n  set creatioData(value) {\n    this._creatioData = value;\n    this.parseCreatioData();\n  }\n  set displayColumn(value) {\n    this._displayColumn = value;\n    this.parseCreatioData();\n  }\n  set valueColumn(value) {\n    this._valueColumn = value;\n    this.parseCreatioData();\n  }\n  parseCreatioData() {\n    if (!this._creatioData || !Array.isArray(this._creatioData)) {\n      this.parsedOptions = [];\n      return;\n    }\n    this.parsedOptions = this._creatioData.map(item => ({\n      label: item[this._displayColumn] || '',\n      value: item[this._valueColumn] || null\n    }));\n  }\n  onSelectionChange(value) {\n    this.selectedValue = value;\n  }\n  static {\n    this.ɵfac = function DemoComponent_Factory(t) {\n      return new (t || DemoComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DemoComponent,\n      selectors: [[\"qnovate-demo\"]],\n      inputs: {\n        creatioData: \"creatioData\",\n        displayColumn: \"displayColumn\",\n        valueColumn: \"valueColumn\",\n        groupName: \"groupName\",\n        selectedValue: \"selectedValue\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"radio-group\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"checked\", \"change\"]],\n      template: function DemoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, DemoComponent_label_1_Template, 3, 4, \"label\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.parsedOptions);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".radio-group {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n}\\n\\nlabel {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  cursor: pointer;\\n}\\n\\ninput[type=radio] {\\n  margin: 0;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlldy1lbGVtZW50cy9kZW1vL2RlbW8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsUUFBQTtBQUFOOztBQUVJO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsUUFBQTtFQUNBLGVBQUE7QUFDTjs7QUFDSTtFQUNFLFNBQUE7RUFDQSxlQUFBO0FBRU4iLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAucmFkaW8tZ3JvdXAge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDhweDtcbiAgICB9XG4gICAgbGFiZWwge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n      encapsulation: 3\n    });\n  }\n};\nDemoComponent = __decorate([CrtViewElement({\n  selector: \"qnovate-demo\",\n  type: \"qnovate.Demo\"\n}), CrtInterfaceDesignerItem({\n  toolbarConfig: {\n    caption: \"Your component\",\n    name: \"qnovate-demo\",\n    icon: require(\"!!raw-loader?{esModule:false}!./demo-icon.svg\")\n  }\n})], DemoComponent);\nexport { DemoComponent };","map":{"version":3,"mappings":";AACA,SACEA,wBAAwB,EACxBC,cAAc,QACT,wBAAwB;;;;;;IAiBzBC,6BAA4C;IAMxCA;MAAA;MAAA;MAAA;MAAA,OAAUA,wDAA+B;IAAA,EAAC;IAL5CA,iBAK6C;IAC7CA,YACF;IAAAA,iBAAQ;;;;;IALJA,eAAkB;IAAlBA,uCAAkB;IAIpBA,eACF;IADEA,gDACF;;;AAsBC,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAAnBC;IAEG,mBAAc,GAAW,MAAM;IAC/B,iBAAY,GAAW,IAAI;IAiB1B,cAAS,GAAW,YAAY;IAChC,kBAAa,GAAQ,IAAI;IAElC,kBAAa,GAAuC,EAAE;;EAlBtD,IAAaC,WAAW,CAACC,KAAU;IACjC,IAAI,CAACC,YAAY,GAAGD,KAAK;IACzB,IAAI,CAACE,gBAAgB,EAAE;EACzB;EAEA,IAAaC,aAAa,CAACH,KAAa;IACtC,IAAI,CAACI,cAAc,GAAGJ,KAAK;IAC3B,IAAI,CAACE,gBAAgB,EAAE;EACzB;EAEA,IAAaG,WAAW,CAACL,KAAa;IACpC,IAAI,CAACM,YAAY,GAAGN,KAAK;IACzB,IAAI,CAACE,gBAAgB,EAAE;EACzB;EAOQA,gBAAgB;IACtB,IAAI,CAAC,IAAI,CAACD,YAAY,IAAI,CAACM,KAAK,CAACC,OAAO,CAAC,IAAI,CAACP,YAAY,CAAC,EAAE;MAC3D,IAAI,CAACQ,aAAa,GAAG,EAAE;MACvB;;IAGF,IAAI,CAACA,aAAa,GAAG,IAAI,CAACR,YAAY,CAACS,GAAG,CAACC,IAAI,KAAK;MAClDC,KAAK,EAAED,IAAI,CAAC,IAAI,CAACP,cAAc,CAAC,IAAI,EAAE;MACtCJ,KAAK,EAAEW,IAAI,CAAC,IAAI,CAACL,YAAY,CAAC,IAAI;KACnC,CAAC,CAAC;EACL;EAEAO,iBAAiB,CAACb,KAAU;IAC1B,IAAI,CAACc,aAAa,GAAGd,KAAK;EAC5B;;;uBAvCWH,aAAa;IAAA;EAAA;;;YAAbA,aAAa;MAAAkB;MAAAC;QAAAjB;QAAAI;QAAAE;QAAAY;QAAAH;MAAA;MAAAI;MAAAC;MAAAC;MAAAC;QAAA;UA/BtBzB,8BAAyB;UACvBA,kEAQQ;UACVA,iBAAM;;;UATsBA,eAAgB;UAAhBA,2CAAgB;;;;;;;;;AA8BnCC,aAAa,eA7CzBF,cAAc,CAAC;EACd2B,QAAQ,EAAE,cAAc;EACxBC,IAAI,EAAE;CACP,CAAC,EACD7B,wBAAwB,CAAC;EACxB8B,aAAa,EAAE;IACbC,OAAO,EAAE,gBAAgB;IACzBC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAEC,OAAO,CAAC,+CAA+C;;CAEhE,CAAC,GAmCW/B,aAAa,CAwCzB;SAxCYA,aAAa","names":["CrtInterfaceDesignerItem","CrtViewElement","i0","DemoComponent","constructor","creatioData","value","_creatioData","parseCreatioData","displayColumn","_displayColumn","valueColumn","_valueColumn","Array","isArray","parsedOptions","map","item","label","onSelectionChange","selectedValue","selectors","inputs","groupName","decls","vars","consts","template","selector","type","toolbarConfig","caption","name","icon","require"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Desktop\\Radio_button_Component\\Radio_button_Component\\projects\\radio_button\\src\\app\\view-elements\\demo\\demo.component.ts"],"sourcesContent":["import { Component, Input, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  CrtInterfaceDesignerItem,\r\n  CrtViewElement,\r\n} from \"@creatio-devkit/common\";\r\n\r\n@CrtViewElement({\r\n  selector: \"qnovate-demo\",\r\n  type: \"qnovate.Demo\",\r\n})\r\n@CrtInterfaceDesignerItem({\r\n  toolbarConfig: {\r\n    caption: \"Your component\",\r\n    name: \"qnovate-demo\",\r\n    icon: require(\"!!raw-loader?{esModule:false}!./demo-icon.svg\"),\r\n  },\r\n})\r\n@Component({\r\n  selector: \"qnovate-demo\",\r\n  template: `\r\n    <div class=\"radio-group\">\r\n      <label *ngFor=\"let option of parsedOptions\">\r\n        <input \r\n          type=\"radio\" \r\n          [name]=\"groupName\" \r\n          [value]=\"option.value\"\r\n          [checked]=\"option.value === selectedValue\"\r\n          (change)=\"onSelectionChange(option.value)\">\r\n        {{option.label}}\r\n      </label>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .radio-group {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n    }\r\n    label {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      cursor: pointer;\r\n    }\r\n    input[type=\"radio\"] {\r\n      margin: 0;\r\n      cursor: pointer;\r\n    }\r\n  `],\r\n  encapsulation: ViewEncapsulation.ShadowDom\r\n})\r\nexport class DemoComponent {\r\n  private _creatioData: any;\r\n  private _displayColumn: string = 'Name';\r\n  private _valueColumn: string = 'Id';\r\n\r\n  @Input() set creatioData(value: any) {\r\n    this._creatioData = value;\r\n    this.parseCreatioData();\r\n  }\r\n\r\n  @Input() set displayColumn(value: string) {\r\n    this._displayColumn = value;\r\n    this.parseCreatioData();\r\n  }\r\n\r\n  @Input() set valueColumn(value: string) {\r\n    this._valueColumn = value;\r\n    this.parseCreatioData();\r\n  }\r\n\r\n  @Input() groupName: string = 'radioGroup';\r\n  @Input() selectedValue: any = null;\r\n\r\n  parsedOptions: Array<{label: string, value: any}> = [];\r\n\r\n  private parseCreatioData() {\r\n    if (!this._creatioData || !Array.isArray(this._creatioData)) {\r\n      this.parsedOptions = [];\r\n      return;\r\n    }\r\n\r\n    this.parsedOptions = this._creatioData.map(item => ({\r\n      label: item[this._displayColumn] || '',\r\n      value: item[this._valueColumn] || null\r\n    }));\r\n  }\r\n\r\n  onSelectionChange(value: any) {\r\n    this.selectedValue = value;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}